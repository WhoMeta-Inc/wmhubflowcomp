apiVersion: v1
kind: Namespace
metadata:
  name: flows
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cdnjs-flow-flows-infinity
  namespace: flows
  labels:
    app: cdnjs-flow-flows-infinity
spec:
  replicas: 1
  selector:
    matchLabels:
      app: cdnjs-flow-flows-infinity
  template:
    metadata:
      labels:
        app: cdnjs-flow-flows-infinity
    spec:
      containers:
      - name: cdnjs-flow-flows-infinity
        image: flowcomponents-cdn:latest # Ersetze durch dein tats√§chliches Image
        ports:
        - containerPort: 8080
---
apiVersion: v1
kind: Service
metadata:
  name: cdnjs-flow-flows-infinity-service
  namespace: flows
  labels:
    app: cdnjs-flow-flows-infinity
spec:
  selector:
    app: cdnjs-flow-flows-infinity
  ports:
  - protocol: TCP
    port: 80
    targetPort: 8080
  type: ClusterIP
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: cdnjs-flow-flows-infinity-cert
  namespace: flows
spec:
  secretName: cdnjs-flow-flows-infinity-tls
  issuerRef:
    name: letsencrypt-azure
    kind: ClusterIssuer
  commonName: cdnjs.whometa.eu
  dnsNames:
  - cdnjs.whometa.eu
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: cdnjs-flow-flows-infinity-ingress
  namespace: flows
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    cert-manager.io/cluster-issuer: letsencrypt-azure
spec:
  ingressClassName: nginx
  tls:
  - hosts:
    - cdnjs.whometa.eu
    secretName: cdnjs-flow-flows-infinity-tls
  rules:
  - host: cdnjs.whometa.eu
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: cdnjs-flow-flows-infinity-service
            port:
              number: 80
